package com.semiproject.styles.cart;

@Controller
@RequestMapping("/cart")
public class CartController {

	@Autowired
	private CartService cartService;

	@GetMapping
	public String viewCart(Model model, HttpSession session) {
		User user = (User) session.getAttribute("user");

		// 로그인한 사용자가 없는 경우, 로그인 페이지로 리다이렉트합니다.
		if (user == null) {
			return "redirect:/login";
		}

		List<CartItem> cartItems = cartService.getCartItemsByUser(user);
		model.addAttribute("cartItems", cartItems);
		return "cart/cart";
	}

	@PostMapping("/add/{productId}")
	public String addToCart(@PathVariable("productId") Long productId, HttpSession session) {
		User user = (User) session.getAttribute("user");

		// 로그인한 사용자가 없는 경우, 로그인 페이지로 리다이렉트합니다.
		if (user == null) {
			return "redirect:/login";
		}

		// 선택한 상품을 데이터베이스에서 조회합니다.
		Product product = productService.getProductById(productId);
		if (product == null) {
			// 상품을 찾을 수 없는 경우, 에러 페이지로 이동합니다.
			return "error/404";
		}

		// 카트에 상품을 추가합니다.
		CartItem cartItem = new CartItem();
		cartItem.setUser(user);
		cartItem.setProduct(product);
		cartItem.setQuantity(1); // 상품 수량은 임의로 1로 설정합니다.

		cartService.addCartItem(cartItem);

		return "redirect:/cart";
	}

	@PostMapping("/remove/{cartItemId}")
	public String removeFromCart(@PathVariable("cartItemId") Long cartItemId, HttpSession session) {
		User user = (User) session.getAttribute("user");

		// 로그인한 사용자가 없는 경우, 로그인 페이지로 리다이렉트합니다.
		if (user == null) {
			return "redirect:/login";
		}

		// 카트에서 상품을 삭제합니다.
		cartService.removeCartItem(cartItemId);

		return "redirect:/cart";
	}
}
