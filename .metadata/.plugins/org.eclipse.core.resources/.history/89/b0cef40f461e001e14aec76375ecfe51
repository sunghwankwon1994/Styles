package com.semiproject.styles.product;


import javax.persistence.*;

import java.math.BigDecimal;
import java.time.LocalDateTime;

@Entity
@Table(name="products")
public class Product {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String name;
    private BigDecimal price;
    private String description;
    @Column(name = "created_at")
    private LocalDateTime createdAt;
    private String imageUrl;
	public String getImageUrl() {
		return imageUrl;
	}

	public void setImageUrl(String imageUrl) {
		this.imageUrl = imageUrl;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public BigDecimal getPrice() {
		return price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public LocalDateTime getCreatedAt() {
		return createdAt;
	}

	@Override
	public String toString() {
		return "Product [id=" + id + ", name=" + name + ", price=" + price + ", description=" + description
				+ ", createdAt=" + createdAt + "]";
	}
	function renderProductDetail(product) {
	    const detailContainer = document.querySelector(".detail");
	    detailContainer.innerHTML = `
	        <img src="${product.imageUrl}" width="400px" height="500px">
	        <div class="cloth">${product.name}</div>
	        <div class="cloth">${product.context}</div>
	        <div class="cloth2">${product.price}</div>
	        <button class="button" data-prd-id="${product.id}">Add Cart</button>
	        <p>${product.description}</p>
	    `;

	    const addButton = detailContainer.querySelector(".button");
	    addButton.addEventListener("click", function() {
	        const productId = addButton.getAttribute("data-prd-id");
	        addToCart(productId);
	    });
	}

	function addToCart(productId) {
	    fetch(`/products/add-to-cart/${productId}`)
	        .then(response => {
	            if (!response.ok) {
	                throw new Error("Failed to add product to cart");
	            }
	            // 카트에 상품이 추가되면 카트 페이지로 이동합니다.
	            window.location.href = "/cart";
	        })
	        .catch(error => {
	            console.error(error);
	            // Handle error case
	        });
	}
}
